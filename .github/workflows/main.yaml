name: CI/CD Workflow

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

permissions:
  id-token: write
  contents: read

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Lint code
        run: flake8 .  

      - name: Run unit tests
        run: pytest

  build-and-push-docker-image:
    name: Build and Push Docker Image to Docker Hub
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub username
          password: ${{ secrets.DOCKER_PASSWORD }}  # Docker Hub password or access token

      - name: Build, Tag, and Push Docker Image
        run: |
          docker build -t yourusername/my_app:latest .
          docker push yourusername/my_app:latest  # Replace with your Docker Hub repository name

  continuous-deployment:
    name: Continuous Deployment
    needs: build-and-push-docker-image
    runs-on: self-hosted  # This requires a self-hosted runner to deploy
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Pull Latest Docker Image
        run: |
          docker pull yourusername/my_app:latest  # Replace with your Docker Hub repository name

      - name: Stop and Remove Previous Container if Running
        run: |
          docker ps -q --filter "name=your_container_name" | grep -q . && docker stop your_container_name && docker rm -fv your_container_name
       
      - name: Run Docker Image to Serve Users
        run: |
          docker run -d -p 8080:8080 --name=your_container_name yourusername/my_app:latest  # Replace with your Docker Hub repository name
      
      - name: Clean Previous Images and Containers
        run: |
          docker system prune -f